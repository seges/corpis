package sk.seges.corpis.pap.service.hibernate.service;

import javax.annotation.Generated;
import javax.persistence.EntityManager;

import sk.seges.corpis.pap.model.converter.MockEntityDTOConverter;
import sk.seges.corpis.pap.model.dto.MockEntityDTO;
import sk.seges.corpis.pap.service.hibernate.service.MockLocalService;
import sk.seges.corpis.pap.service.hibernate.service.MockRemoteService;
import sk.seges.corpis.service.annotation.TransactionPropagation.PropagationTarget;
import sk.seges.corpis.service.annotation.TransactionPropagation.PropagationType;
import sk.seges.corpis.service.annotation.TransactionPropagationModel;
import sk.seges.sesam.pap.service.annotation.LocalServiceConverter;

@LocalServiceConverter(remoteServices = {MockRemoteService.class})
@Generated(value = "sk.seges.corpis.pap.service.hibernate.HibernateServiceConverterProcessor")
public class MockServiceConverter implements MockRemoteService {

	private MockLocalService mockLocalServiceService;
	private EntityManager arg0;


	public MockServiceConverter(MockLocalService mockLocalServiceService, EntityManager arg0) {

		this.mockLocalServiceService = mockLocalServiceService;
		this.arg0 = arg0;
	}

	@Override
	public MockEntityDTO find(){
		return (MockEntityDTO)getMockEntityDTOConverter(new TransactionPropagationModel[] {new TransactionPropagationModel(new String[] {}, new PropagationTarget[] {PropagationTarget.RETURN_VALUE, PropagationTarget.ARGUMENTS}, PropagationType.PROPAGATE)}).toDto(mockLocalServiceService.find());
	}

	private MockEntityDTOConverter getMockEntityDTOConverter(TransactionPropagationModel[] arg1) {
		return new MockEntityDTOConverter(arg0, arg1);
	}

}